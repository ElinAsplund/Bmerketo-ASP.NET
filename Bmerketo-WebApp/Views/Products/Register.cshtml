@model ProductRegisterViewModel
@{
    var categories = await categoryService.GetCategoriesAsync();
}

<partial name="/Views/Partials/_ProductHeader.cshtml" />

<!-- register-form start -->
<section class="register-form">
    <div class="container">
        <div class="form-content">
            <div class="form-title">Register a new product</div>
            <hr>
            <form method="post" novalidate>

                <div class="line">
                    <div asp-validation-summary="ModelOnly" class="error-text"></div>
                </div>

                <div class="line">
                    <label asp-for="Name"></label>
                    <input asp-for="Name" required />
                    <span asp-validation-for="Name" class="error-text"></span>
                </div>

                <div class="line">
                    <label asp-for="Description"></label>
                    <textarea asp-for="Description" required></textarea>
                    <span asp-validation-for="Description" class="error-text"></span>
                </div>

                <div class="line ">
                    <label asp-for="Price"></label>
                    <input asp-for="Price" type="number" min="0" id="price-input" required />
                    <span asp-validation-for="Price" class="error-text"></span>
                </div>

                <div class="line">
                    <label asp-for="LgImgUrl"></label>
                    <input asp-for="LgImgUrl" />
                    <span asp-validation-for="LgImgUrl" class="error-text"></span>
                </div>

                <div class="line">
                    <label asp-for="SmImgUrl"></label>
                    <input asp-for="SmImgUrl" required />
                    <span asp-validation-for="SmImgUrl" class="error-text"></span>
                </div>

                @* --------------select ONLY ONE category!-------------- *@
                @*This one is working, but you can only select ONE category!*@
                @*<div class="line">
                    <label asp-for="Category" class=""></label>
                    <select asp-for="Category">
                        @foreach (var category in categories)
                        {
                            <option value="@category.Name">@category.Name</option>
                        }
                    </select>
                </div>*@
                @* --------------select ONLY ONE category!-------------- *@

                @* --------------select MULTIPLE category!-------------- *@
                <label class="">Product category:</label>
                @foreach(var category in categories)
                {

                    @* ----------!nitialize the checkboxes dynamically---------- *@
                    var checkbox = new CheckboxOptionModel();

                    if(category == categories.First())
                    {
                        checkbox.IsChecked = true;
                    }

                    checkbox.Description = category.Name;
                    checkbox.Value = category.Id;
                    @* ----------!nitialize the checkboxes dynamically---------- *@

                    @* Using bootstraps standard checkbox!
                    <div class="form-check">

                        <input class="form-check-input" 
                            type="checkbox" 
                            value="@checkbox.Value"
                               name="CheckboxCategoryId"
                               id="checkbox_@checkbox.Value"
                            checked="@checkbox.IsChecked">

                        <label class="form-check-label"
                            for="checkbox_@checkbox.Value">

                            @checkbox.Description

                        </label>
                    </div>*@

                    @* Using custom checkbox!*@
                    <div class="form-check">
                        <label class="custom-checkbox" for="checkbox_@checkbox.Value">

                            @*Makes the first letter in @checkbox.Description to be capitalized*@
                            @(char.ToUpper(checkbox.Description[0]) + checkbox.Description.Substring(1))

                            <input class="form-check-input"
                                   type="checkbox"
                                   value="@checkbox.Value"
                                   name="CheckboxCategoryId"
                                   id="checkbox_@checkbox.Value"
                                   checked="@checkbox.IsChecked">

                            <span class="checkmark"></span>
                        </label>
                    </div>
                }
                @* --------------select MULTIPLE category!-------------- *@

                <button class="btn-theme" type="submit">Submit</button>
            </form>
        </div>
    </div>
</section>
<!-- register-form end -->